apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
    	release {
            def properties = new Properties()
            File prop = rootProject.file('local.properties')
            if (prop.exists()) {
                def inputStream = project.rootProject.file('local.properties').newDataInputStream()
                properties.load(inputStream)
            }
            storeFile file("../Mira.jks")
            storePassword properties.containsKey("KEYSTORE_PASS") ? properties.getProperty("KEYSTORE_PASS") : System.getenv("KEYSTORE_PASS")
            keyAlias properties.containsKey("ALIAS_NAME") ? properties.getProperty("ALIAS_NAME") : System.getenv("ALIAS_NAME")
            keyPassword properties.containsKey("ALIAS_PASS") ? properties.getProperty("ALIAS_PASS") : System.getenv("ALIAS_PASS")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

            buildConfigField("String", "HTTP_BASE", '"http://49.232.173.220:3001/"')
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

            buildConfigField("String", "HTTP_BASE", '"http://49.232.173.220:3001/"')

            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"

    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }

    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    sourceSets { main { java.srcDirs = ['src/main/java', 'src/main/java/mock'] } }

    dataBinding {
        enabled = true
        enabledForTests = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //UI
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "com.jaeger.statusbarutil:library:1.5.1"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"

    // Dagger
    implementation "com.google.dagger:dagger:2.25.4"
    kapt "com.google.dagger:dagger-compiler:2.25.4"
    implementation "com.google.dagger:dagger-android-support:2.25.4"
    kapt "com.google.dagger:dagger-android-processor:2.25.4"

    //Retrofit + okHttp for network request
    implementation "com.squareup.retrofit2:retrofit:2.6.2"
    implementation "com.squareup.okhttp3:okhttp:4.4.0"
    implementation "com.squareup.retrofit2:converter-gson:2.6.2"

    //Glide
    implementation "com.github.bumptech.glide:glide:4.11.0"
    annotationProcessor "com.github.bumptech.glide:compiler:4.11.0"

    // Architecture Components
    implementation "androidx.room:room-runtime:2.2.4"
    kapt "androidx.room:room-compiler:2.2.4"
    implementation "androidx.room:room-ktx:2.2.4"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.2.0"
    kapt "androidx.lifecycle:lifecycle-compiler:2.2.0"
    implementation "androidx.navigation:navigation-fragment-ktx:2.2.1"
    implementation "androidx.navigation:navigation-ui-ktx:2.2.1"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61"
    implementation "androidx.fragment:fragment-ktx:1.2.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0"


    testImplementation "junit:junit:4.12"



    androidTestImplementation 'androidx.test:runner:1.3.0-alpha04'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha04'
}
